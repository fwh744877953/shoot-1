var autoTextarea = function (n, i, l) { if (null != typeof n && null != n) { i = i || 0; function e(e, t) { n.addEventListener ? n.addEventListener(e, t, !1) : n.attachEvent("on" + e, t) } var r = !!document.getBoxObjectFor || "mozInnerScreenX" in window, s = !!window.opera && !!window.opera.toString().indexOf("Opera"), u = n.currentStyle ? function (e) { var t = n.currentStyle[e]; if ("height" !== e || 1 === t.search(/px/i)) return t; var a = n.getBoundingClientRect(); return a.bottom - a.top - parseFloat(u("paddingTop")) - parseFloat(u("paddingBottom")) + "px" } : function (e) { return getComputedStyle(n, null)[e] }, c = parseFloat(u("height")); n.style.resize = "none"; function t() { var e, t, a = 0, o = n.style; n._length !== n.value.length && (n._length = n.value.length, r || s || (a = parseInt(u("paddingTop")) + parseInt(u("paddingBottom"))), e = document.body.scrollTop || document.documentElement.scrollTop, n.style.height = c + "px", n.scrollHeight > c && (l && n.scrollHeight > l ? (t = l - a, o.overflowY = "auto") : (t = n.scrollHeight - a, o.overflowY = "hidden"), o.height = t + i + "px", e += parseInt(o.height) - n.currHeight, document.body.scrollTop = e, document.documentElement.scrollTop = e, n.currHeight = parseInt(o.height))) } e("propertychange", t), e("input", t), e("focus", t), t() } }; function getFullPath(e) { return null == e || "" == e || e.startsWith("http") ? e : siteRoot + e } function getFilePath(e) { return getFullPath("file/download/" + e + "?size=M") } var user_create_app = angular.module("wx_create_app", []); function getCurrentScope() { return angular.element($(fileupload_box)).scope() } function removeImage(a) { var o = getCurrentScope(); o.$apply(function () { for (var e = -1, t = 0; t < o.screenshots.length; t++)if (o.screenshots[t].name == a) { e = t; break } 0 <= e && o.screenshots.splice(e, 1) }) } function prepareDeleteAction() { var e = $(".itemimage_selected").length; 0 < e ? ($("#delete-button").text("删除图片(" + e + ")"), $("#delete-button").show()) : $("#delete-button").hide() } function executeDeleteAction() { var e = []; $(".itemimage_selected").each(function () { e.push($(this).attr("data-name")), $(this).remove() }); for (var t = 0; t < e.length; t++)removeImage(e[t]); $("#delete-button").hide() } function loadImages() { var a = getCurrentScope(), e = $("#JsonImages").val(); if ("" != e) { var o = JSON.parse(e); a.$apply(function () { var e; if (null != o && null != o.images) for (e = 0; e < o.images.length; e++) { var t = o.images[e]; t.url = getFullPath(t.url), a.screenshots.push(t) } }) } } user_create_app.controller("wx_create_controller", ["$scope", function (e) { e.screenshots = [], e.imageClick = function (e) { $(e).hasClass("itemimage_selected") ? $(e).removeClass("itemimage_selected") : $(e).addClass("itemimage_selected"), prepareDeleteAction() }, e.childLocations = [] }]); var MaximumUploadCount = 9; function ifUploadReachMaximum() { return getCurrentScope().screenshots.length >= MaximumUploadCount } function loadChildLocations(e, t) { var r = t, a = siteRoot + "location/getitems?hot=false&top=false&topExcludeHot=false&parentCode=" + e; $.ajax({ url: a, type: "GET", contentType: "application/json; charset=utf-8", success: function (e) { if (e.success && 0 < e.result.length) { var t, a = [], o = null; for (t = 0; t < e.result.length; t++) { var n = e.result[t], i = { Code: n.Code, ParentCode: n.ParentCode, Name: n.Name }; i.Code == i.ParentCode + "00" && (i.Code = i.ParentCode), r ? i.Code == defaultIDChildLocationCode ? (o = i, defaultIDChildLocationCode = "") : i.Code == i.ParentCode && (o = i) : i.Code == defaultChildLocationCode ? (o = i, defaultChildLocationCode = "") : i.Code == i.ParentCode && (o = i), a.push(i) } var l = getCurrentScope(); l.$apply(function () { r ? (l.idChildLocations = a, l.selectedIDChildLocation = o) : (l.childLocations = a, l.selectedChildLocation = o) }) } }, error: function () { } }) } function refreshChildLocations(e) { loadChildLocations(e ? $("#IDTopLocation").val() : $("#TopLocation").val(), e) } function getFeeValuePlaceholder(e) { return "want" == e ? "输入收费金额" : "pay" == e ? "输入付费金额" : "" } function onFeeTypeChanged() { var e = $("input[name=FeeTypeOption]:checked", "#submit_form").val(); if (null != e) if ($("#FeeType").val(e), "want" == e || "pay" == e) { var t = getFeeValuePlaceholder(e); $("#FeeValue").attr("placeholder", t), $("#FeeValueInput").show() } else $("#FeeValueInput").hide() } function updateFormHiddenValues() { for (var e, t = getCurrentScope(), a = [], o = 0; o < t.screenshots.length; o++)e = t.screenshots[o], a.push({ id: e.id, name: e.name, s: e.s, savedPath: e.savedPath }); var n = { images: a }, i = JSON.stringify(n); $("#JsonImages").val(i); var l, r = []; $(".select_item").each(function () { "y" == (l = $(this)).attr("data-selected") && r.push(l.text()) }), $("#Tags").val(r.join(",")) } function showToastMessage(e) { $("#toast_message_text").html(e), $("#toast_message").show(), setTimeout(function () { $("#toast_message").hide() }, 1e3) } function isNumeric(e) { return !jQuery.isArray(e) && 0 <= e - parseFloat(e) + 1 } function random_string(e) { e = e || 32; for (var t = "0123456789", a = t.length, o = "", n = 0; n < e; n++)o += t.charAt(Math.floor(Math.random() * a)); return o } function extractFileName(e) { var t = 0 <= e.indexOf("\\") ? e.lastIndexOf("\\") : e.lastIndexOf("/"), a = e.substring(t); return 0 !== a.indexOf("\\") && 0 !== a.indexOf("/") || (a = a.substring(1)), a } function extractFileExt(e) { var t = e.split("."); return t.length <= 1 ? "jpg" : t.pop() } var _fileUploadIndex = 0; function generateFileName(e, t) { var a = random_string(6), o = (new Date).getTime(); ++_fileUploadIndex; return e + "_01" + a + _fileUploadIndex + "_" + o + "." + t } function checkValid() { var e = $("#FeeType").val(); if (null == e || "" == e) return showToastMessage("请选择<br />约拍费用"), !1; if ("want" == e || "pay" == e) { var t = $("#FeeValue").val(); if ("" == t) return showToastMessage("请填写<br />费用金额"), !1; if (!isNumeric(t)) return showToastMessage("费用金额<br />必须为数字"), !1 } if ("" == $("#Message").val()) return showToastMessage("请填写<br />发布内容"), !1; if (0 < requiredMinUploadImageCount && getCurrentScope().screenshots.length < requiredMinUploadImageCount) return showToastMessage("请最少上传<br />" + requiredMinUploadImageCount + "张附加照片"), !1; return !0 } $(function () { autoTextarea(document.getElementById("Message")), autoTextarea(document.getElementById("TakeTime")), autoTextarea(document.getElementById("TakeLocation")), autoTextarea(document.getElementById("TakeResult")), $("input[type=radio][name=FeeTypeOption]").change(function () { onFeeTypeChanged() }); var _localUploadUrl = siteRoot + "/upload/uploadhandler.ashx?userID=" + _shsUserID, _fileUploadConfig = _aliConfigData, _fileStoreAli = "ali"; $("#fileupload_box").fileupload({ url: _fileStore == _fileStoreAli ? _fileUploadConfig.host : _localUploadUrl, type: "POST", dropZone: $(this), add: function (e, t) { ifUploadReachMaximum() || (showUploadingModal(), t.submit()) } }).bind("fileuploadsubmit", function (e, t) { if (_fileStore == _fileStoreAli && null != _fileUploadConfig) { var a = extractFileExt(extractFileName(t.files[0].name)), o = generateFileName(_shsUserID, a); t.formData = { fname: o, key: _fileUploadConfig.dir + "/" + o, policy: _fileUploadConfig.policy, OSSAccessKeyId: _fileUploadConfig.accessid, success_action_status: "200", signature: _fileUploadConfig.signature } } }).bind("fileuploaddone", function (e, data) { if (hideUploadingModal(), _fileStore == _fileStoreAli) { var key = data.formData.key, fileName = data.formData.fname, fileUrl = "http://image.shehuiapp.com/" + key + "/s300", currentScope = getCurrentScope(); null != currentScope && currentScope.$apply(function () { if (currentScope.screenshots.length < MaximumUploadCount) { var e = { id: 0, name: fileName, savedPath: key, url: fileUrl, s: "" }; currentScope.screenshots.push(e) } }) } else { var objResult = eval(data.result); $.each(objResult, function (e, t) { t.url = getFilePath(t.id); var a = getCurrentScope(); null != a && a.$apply(function () { if (a.screenshots.length < MaximumUploadCount) { var e = { id: t.id, name: t.id, url: t.url, s: "" }; a.screenshots.push(e) } }) }) } }), $("#delete-button").click(function () { executeDeleteAction() }), $("#TopLocation").change(function (e) { refreshChildLocations(!1) }), $("#btn_security_account_about").click(function () { $("#security_account_about_dialog").show() }), $("#tag_list").on("click", ".select_item", function () { var e = $(this); "y" == e.attr("data-selected") ? (e.attr("data-selected", "n"), e.removeClass("select_item_selected")) : (e.attr("data-selected", "y"), e.addClass("select_item_selected")) }), $("#submit_button").click(function (e) { if (updateFormHiddenValues(), !checkValid()) return e.stopPropagation(), e.preventDefault(), !1; $("#submit_form").submit() }), refreshChildLocations(!1), onFeeTypeChanged(), loadImages() });